/** ЗАДАЧА 43 - Сравнение двух массивов
 *
 * 1. Создайте функцию "areArraysEqual" с двумя параметрами "firstArray" и "secondArray"
 *
 * 2. Верните "true" если два массива равны, а именно:
 *  - имеют одинаковое количество элементов
 *  - все элементы совпадают, например, firstArray[0] === secondArray[0] и т. д.)
 *
 * 3. В противном случае верните "false"
 *
 * ВАЖНО: Исходите из того, что массивы содержат элементы примитивных типов
 */


const areArraysEqual = (firstArray, secondArray) => {
    if(
        firstArray.length === secondArray.length &&
        firstArray.every((element, index) => element === secondArray[index])

    ) {
        return true
    }
    return false
}
const a = [1, 2, 3]
const b = [1, 2, 3]

console.log(a === b) // false (Почему?)

const c = [2, 1, 3]
const d = [1, 2, 3, 4]

console.log(areArraysEqual(a, b)) // true
console.log(areArraysEqual(a, c)) // false
console.log(areArraysEqual(a, d)) // false
/**
 * Сначала происходит проверка на равенство длины двух массивов с помощью условия firstArray.length === secondArray.length.
 * Если длины массивов не совпадают, то они не могут быть равными, и функция возвращает false.
 * Затем с помощью метода every происходит итерация по элементам массивов и сравнение каждого элемента с помощью условия element === secondArray[index]. 
 * Метод every проверяет, выполняется ли данное условие для каждого элемента массива firstArray. Если для всех элементов условие выполняется, значит, все элементы массивов совпадают.
 * Если оба условия выполняются, то функция возвращает true, что означает, что массивы равны.
 * Если хотя бы одно из условий не выполняется, функция возвращает false, что означает, что массивы не равны
 * 
 * Почему console.log(a === b) возвращает false? -- объект это ссылочный тип
 * Это связано с тем, что при сравнении массивов с помощью оператора === происходит сравнение ссылок на объекты, а не их содержимого. 
 */
