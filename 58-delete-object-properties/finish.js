/** ЗАДАЧА 58 - Удаление свойств объекта
 *
 * 1. Используйте деструктуризацию объекта вместе с rest опертором,
 * чтобы быстро удалить определенные свойства из объекта.
 *
 * 2. Убедитесь, что переменные, которые будут использоваться для деструктуризации удаленных свойств,
 * не будут доступны после операции деструктуризации.
 */

let person = {
  _id: '5ad8cefcc0971792dacb3f1f',
  index: 4,
  processed: false,
  cart: ['item1', 'item2', 'item3'],
  email: 'slarsen@test.com',
  name: 'Samanta Larsen',
  cartId: 435,
}

{let _id, processed, cart;
 ({_id, processed, cart, ...person} = person)
 console.log(_id, processed, cart)
}

// delete person._id
// delete person.processed
// delete person.cart

console.log(person)
//console.log(_id, processed, cart)

/*
{
  index: 4,
  email: "slarsen@test.com",
  name: "Samanta Larsen",
  cartId: 435
}
*/

/**
 * 
 * можем использовать синтаксис деструктуризации объекта для извлечения только тех свойств, которые хотим удалить из объекта person. 
 * с помощью оператора rest (...), сохраняем остальные свойства в новом объекте.
 * объявляем переменные _id, processed и cart, которые будут использоваться для временного хранения значений свойств, которые хотим удалить.
 * с помощью синтаксиса деструктуризации объекта и оператора rest (...), присваиваем значения этих свойств переменным и одновременно извлекаем остальные свойства и сохраняем их в объекте person
 * 
 * можем использовать оператор delete для удаления свойств _id, processed и cart из объекта person. 
 * вместо использования оператора delete, можем исключить эти свойства из деструктуризации объекта person, чтобы они не были сохранены в отдельных переменных. 
 * Таким образом, они будут удалены из исходного объекта person.
 * После удаления свойств, получаем новый объект, который содержит только оставшиеся свойства: index, email, name и cartId. 
 * внимание! переменные _id, processed и cart, которые использовались для временного хранения значений удаленных свойств, больше не содержат эти значения.


 */